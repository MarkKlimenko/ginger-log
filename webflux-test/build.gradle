buildscript {
    ext {
        coverageExclusion = [
                '**/**',
        ]

        // versions
        kotlinVersion = "1.7.22"
        kotlinLoggingVersion = "2.0.11"

        springBootVersion = "2.7.9"
        springManagementVersion = "1.0.15.RELEASE"

        junitVersion = "5.8.1"
        codeQualityVersion = "1.1"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.noarg" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.jpa" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"

    id "io.spring.dependency-management" version "$springManagementVersion"
    id "org.springframework.boot" version "$springBootVersion"

    id "com.markklim.popcorn.quality" version "$codeQualityVersion"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":logger")
    implementation "org.springframework.boot:spring-boot-starter-webflux"

    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor"
    implementation "io.github.microutils:kotlin-logging-jvm:$kotlinLoggingVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
}
